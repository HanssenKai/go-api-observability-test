name: semantic release

# publishes a image based on semantic versioning

on:
  push:
    branches:
      - "main"
      - "development"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'  # Specify your Go version

    - name: Run tests
      run: |
        go test

  semantic-release:
    runs-on: ubuntu-latest
    # requires write permissions, when called from another workflow, parent workflow also needs these permissions
    permissions:
      contents: write
      packages: write
    outputs: 
      published:  ${{steps.semantic.outputs.new_release_published }}
      version:  ${{steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout repository
        with:
          persist-credentials: false
        uses: actions/checkout@v3
      
      - name: create package.json for semantic
        run: |
          cat <<EOF > /tmp/package.json
          {
            "name": "run-semantic",
            "version": "0.1.0",
            "private": true,
            "devDependencies": {
              "@semantic-release/changelog": "^6.0.1",
              "@semantic-release/exec": "^6.0.3",
              "@semantic-release/git": "^10.0.1",
              "@semantic-release/github": "^8.0.7",
              "semantic-release": "^19.0.2"
            }
          }
          EOF

      - name: create release rc
        run: |
          cat <<'EOF' > .releaserc
            branches:
            - main
            - master
            - name: development
              prerelease: true
            - name: test
              prerelease: true

            plugins:
            - '@semantic-release/commit-analyzer'
            - '@semantic-release/release-notes-generator'
            - - '@semantic-release/exec'
              - generateNotesCmd: "test ${branch.type} != release || echo ${nextRelease.version} > .version"
            - - '@semantic-release/exec'
              - prepareCmd: "test ${branch.type} != release || sed -i 's,tag: .*$,tag: ${nextRelease.version},' helm/values.yaml"
            - - '@semantic-release/git'
              - message: "[skip ci] release: ${nextRelease.version}\n\n${nextRelease.notes}"
                assets: [ ".version", "helm/*" ]
            - - '@semantic-release/github'
              - successComment: false
                failureComment: false
                assets: []

            analyzeCommits:
            - path: "@semantic-release/commit-analyzer"
              releaseRules:
              - type: "fix"
                release: "patch"
              - type: "patch"
                release: "patch"
              - type: "feat"
                release: "minor"
              - type: "feature"
                release: "minor"
              - type: "minor"
                release: "minor"
              - type: "breaking"
                release: "major"
              - type: "major"
                release: "major"
              - release: "patch"
          EOF
          
      - name: Install semantic dependencies
        run: |
          npm install --prefix /tmp
      
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/changelog@^6.0.1
            @semantic-release/exec@^6.0.3
            @semantic-release/git@^10.0.1
            @semantic-release/github@^8.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

